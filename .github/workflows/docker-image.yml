name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code  
        uses: actions/checkout@v2

      - name: Set up Python  
        uses: actions/setup-python@v2
        with:
          python-version: 3.x 

      - name: Install dependencies  
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          chmod +x wait-for-it.sh

      - name: Run Django tests  
        run: |
          python manage.py test

      - name: Build and push Docker image 
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}  
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker build -t myproject .  
          docker tag myproject $DOCKER_USERNAME/myproject  
          docker push $DOCKER_USERNAME/myproject
          
      - name: Build Docker Compose
        run: |
          sudo docker compose up -d

      - name: Run Django tests  # Шаг для запуска тестов Django
        run: |
          python manage.py test

      - name: Down Docker Compose
        run: |
          sudo docker compose down

  deploy:
  
    needs: build 
    runs-on: ubuntu-latest
    steps:
      - name: message
        run: |
          echo "there must be your servers to deploy"
    
#     - name: Deploy to server
#       env:
#         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
#         SSH_USERNAME: your_server_username
#         SSH_HOST: your_server_ip_address
#       if: github.ref == 'refs/heads/main' # Deploy only when push to main
#       run: |
#         mkdir -p ~/.ssh
#         echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
#         chmod 600 ~/.ssh/id_rsa
#         ssh-keyscan $SSH_HOST >> ~/.ssh/known_hosts
#         scp docker-compose.yml $SSH_USERNAME@$SSH_HOST:/path/to/your/docker-compose.yml
#         ssh $SSH_USERNAME@$SSH_HOST "docker-compose pull && docker-compose up -d"
        
#     - name: Build and push Docker image to Azure ACR
#       env:
#         AZURE_REGISTRY: ${{ secrets.AZURE_REGISTRY }}
#         AZURE_APP_ID: ${{ secrets.AZURE_APP_ID }}
#         AZURE_PASSWORD: ${{ secrets.AZURE_PASSWORD }}
#         AZURE_TENANT: ${{ secrets.AZURE_TENANT }}
#       run: |
#         # Log in to Azure Container Registry
#         echo $AZURE_PASSWORD | docker login $AZURE_REGISTRY --username $AZURE_APP_ID --password-stdin

#         # Build and tag the Docker image
#         docker build -t $AZURE_REGISTRY/myproject .

#         # Push the Docker image to Azure Container Registry
#         docker push $AZURE_REGISTRY/myproject
